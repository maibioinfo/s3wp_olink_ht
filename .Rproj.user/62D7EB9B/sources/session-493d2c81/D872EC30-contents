# Mai Nguyen
# Olink HT and Olink Explore data analyis
# 11/11/2024
# draft code

# import require lib
library(dplyr)
library(impute)
library(openxlsx)
library(OlinkAnalyze)

# read in data
olink.ht = read.csv('C:/Users/maihu/wellness/data/onlink_ht/olink_ht.csv', header = T)
olink.target = read.delim('C:/Users/maihu/wellness/data/olink_target/olink_target.txt', sep = '\t', header = T)

# QC
# Count warnings to filter
# Warning count for samples
sample.warning.counts <- olink.ht %>%
  group_by(DAid) %>% 
  summarize(
    sample_warn_count = sum(SampleQC == 'FAIL', na.rm = TRUE),  
    sample_total_count = n(),                                  
    sample_warn_percentage = (sample_warn_count / sample_total_count) * 100 
  )%>%
  arrange(desc(sample_warn_count))

# Warning counts for proteins
protein.warning.counts <- olink.ht %>%
  group_by(UniProt) %>% 
  summarize(
    protein_warn_count = sum(AssayQC == 'WARN', na.rm = TRUE),  
    protein_total_count = n(),                                 
    protein_warn_percentage = (protein_warn_count / protein_total_count) * 100 
  )%>%
  arrange(desc(protein_warn_count))

# Filter data with more than 50% warning
# Filter samples
olink.ht.fil1 <- olink.ht %>%
  inner_join(sample.warning.counts, by = 'DAid') %>% 
  {
    removed_samples <- filter(., sample_warn_percentage > 50) %>% 
      group_by(DAid) %>%
      summarize(records_removed = n(), .groups = 'drop')  # Count records per removed sample
    cat('Samples removed:', nrow(removed_samples), '(', sum(removed_samples$records_removed), 'records) \n')
    filter(., sample_warn_percentage <= 50) 
  } %>% 
  select(-sample_warn_count, -sample_total_count, -sample_warn_percentage)

# Filter proteins and count removals
olink.ht.fil2 <- olink.ht.fil1 %>%
  inner_join(protein.warning.counts, by = 'UniProt') %>% 
  {
    removed_proteins <- filter(., protein_warn_percentage > 50) %>%
      group_by(UniProt) %>%
      summarize(records_removed = n(), .groups = 'drop')  # Count records per removed protein
    cat('Proteins removed:', nrow(removed_proteins), '(', sum(removed_proteins$records_removed), 'records) \n')
    filter(., protein_warn_percentage <= 50)
  } %>% 
  select(-protein_warn_count, -protein_total_count, -protein_warn_percentage)

# Not sure how to exlucde measurement with warnings since I am unsure which level of NPX is warning

# Proteins with multiple assay
protein.multiple.assay <- olink.ht.fil2 %>%
  group_by(UniProt) %>%
  filter(n_distinct(Assay) > 1)


id = read.xlsx('C:/Users/maihu/wellness/data/scapis_general_data/samples_2024-11-20.xlsx', sheet = 1)

matches = merge(olink.ht, id, by = c('barcode'))

# Output the results
if (nrow(matches) > 0) {
  print("Matching rows found:")
  print(matches)
} else {
  print("No matching rows found.")
}



names(id)[names(id) == "Barcode"] <- "barcode"


names(olink.ht)
names(id)
